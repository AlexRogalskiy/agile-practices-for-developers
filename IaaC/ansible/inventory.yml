- hosts: all
  gather_facts: no
  become: yes
  tasks:
  - name: "Prepare apt cache"
    ignore_errors: yes
    apt:
      autoremove: yes
      autoclean: yes
      update_cache: yes
      cache_valid_time: 86400

- hosts: ci_hosting
  gather_facts: yes
  become: yes

  pre_tasks:
    - assert:
        that:
          - ansible_memtotal_mb >= 16000
          - ansible_processor_vcpus >= 4

  roles:
    - geerlingguy.docker

  tasks:
    - name: Install Maven
      become: yes
      apt:
        name: maven
        state: latest

    - name: Copy ci-docker-compose file
      become: yes
      copy:
        src: ci-docker-compose.yml
        dest: /var

    - name: Copy elk-docker-compose file
      become: yes
      copy:
        src: elk-docker-compose.yml
        dest: /var
    - name: Copy logstash.conf file
      become: yes
      copy:
        src: logstash.conf
        dest: /var

    - name: Shut down CI docker containers
      become: yes
      command: docker-compose --file /var/ci-docker-compose.yml down --timeout 60
      register: ci_shutdown_console
    - debug: msg="{{ ci_shutdown_console.stdout }}"
    - debug: msg="{{ ci_shutdown_console.stderr }}"

    - name: Shut down ELK docker containers
      become: yes
      command: docker-compose --file /var/elk-docker-compose.yml down --timeout 60
      register: elk_shutdown_console
    - debug: msg="{{ elk_shutdown_console.stdout }}"
    - debug: msg="{{ elk_shutdown_console.stderr }}"

    - name: Build and start up CI docker containers
      become: yes
      command: docker-compose --file /var/ci-docker-compose.yml up --detach
      register: ci_startup_console
    - debug: msg="{{ ci_startup_console.stdout }}"
    - debug: msg="{{ ci_startup_console.stderr }}"

    - name: Build and start up ELK docker containers
      become: yes
      command: docker-compose --file /var/elk-docker-compose.yml up --detach
      register: elk_startup_console
    - debug: msg="{{ elk_startup_console.stdout }}"
    - debug: msg="{{ elk_startup_console.stderr }}"

- hosts: pre_prod
  gather_facts: yes
  become: yes

  pre_tasks:
    - assert:
        that:
          - ansible_memtotal_mb >= 8000
          - ansible_processor_vcpus >= 2

  roles:
    - role: lean_delivery.java
      transport: repositories
      java_package: jre
      java_major_version: 8

  vars:
    db_user: dbo
    databases:
      - dbo_0
      - dbo_1
      - dbo_2
      - dbo_3
      - dbo_4
      - dbo_5
      - dbo_6
      - dbo_7
      - dbo_8
      - dbo_9

  tasks:
    - name: Create dir for release application
      file:
        path: /dbo
        state: directory
        mode: 0777
        recurse: yes

    - name: Install Postgres and dependencies
      apt: name={{item}}
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python3-psycopg2

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes

    - name: Create databases
      become: true
      become_user: postgres
      postgresql_db: name={{item}} state=present
      with_items: databases

    - name: Create db user and grant access to databases
      become: true
      become_user: postgres
      postgresql_user: db={{item}} name={{db_user}} priv=ALL state=present password=P@ssw0rd
      with_items: databases
